[project]
name = "mobi-plugin"
dynamic = ["version"]
description = "Interface popcorn/mbipy"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "ClÃ©ment Capdeville", email = "clement.capdeville@univ-lyon1.fr"},
]
classifiers = [
        "Development Status :: 2 - Pre-Alpha",
        "Framework :: napari",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3.12",
        "Topic :: Scientific/Engineering :: Image Processing",
]
requires-python = ">=3.12, <3.13"
dependencies = [
        "numpy==1.26.4",
        "magicgui",
        "qtpy",
        "scikit-image",
        "matplotlib",
        "pandas",
        "requests",
        "scipy",
        "tqdm",
        "pyyaml",
        "h5py",
        "imageio",
        "dask",
        "zarr",
        "numba",
        "pydantic",
        "jinja2",
        "pyqt5",
        "napari",
        "vispy",
        "networkx",
        "tornado",
        "psutil",
        "pillow",
        "fonttools",
        "cycler",
        "kiwisolver",
        "pyparsing",
        "python-dateutil",
        "pytz",
        "six",
        "typing-extensions",
        "importlib-metadata",
        "packaging",
        "setuptools",
        "wheel",
        "setuptools-scm",
        "tox",
        "pytest",
        "pytest-cov",
        "pytest-qt",
        "array_api_compat",
        "PyWavelets",
        "ptwt",
        "fabio",
        "SimpleITK",
]

[project.optional-dependencies]
testing = [
        "tox",
        "pytest",  # https://docs.pytest.org/en/latest/contents.html
        "pytest-cov",  # https://pytest-cov.readthedocs.io/en/latest/
        "pytest-qt",  # https://pytest-qt.readthedocs.io/en/latest/
        "napari",
        "pyqt5",
]

[project.entry-points."napari.manifest"]
mobi-plugin = "mobi_plugin:napari.yaml"

[project.urls]
"Bug Tracker" = "https://github.com/Clementcmoi/MoBI_plugin/issues"
"Documentation" = "https://github.com/Clementcmoi/MoBI_plugin#README.md"
"Source Code" = "https://github.com/Clementcmoi/MoBI_plugin"
"User Support" = "https://github.com/Clementcmoi/MoBI_plugin/issues"

[build-system]
requires = ["setuptools>=42.0.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml"]

[tool.setuptools_scm]
write_to = "src/mobi_plugin/_version.py"

[tool.black]
line-length = 79
target-version = ['py38', 'py39', 'py310']

[tool.ruff]
line-length = 79
lint.select = [
        "E", "F", "W", #flake8
        "UP", # pyupgrade
        "I", # isort
        "BLE", # flake8-blind-exception
        "B", # flake8-bugbear
        "A", # flake8-builtins
        "C4", # flake8-comprehensions
        "ISC", # flake8-implicit-str-concat
        "G", # flake8-logging-format
        "PIE", # flake8-pie
        "SIM", # flake8-simplify
]
lint.ignore = [
        "E501", # line too long. let black handle this
        "UP006", "UP007", # type annotation. As using magicgui require runtime type annotation then we disable this.
        "SIM117", # flake8-simplify - some of merged with statements are not looking great with black, reanble after drop python 3.9
]

exclude = [
        ".bzr",
        ".direnv",
        ".eggs",
        ".git",
        ".mypy_cache",
        ".pants.d",
        ".ruff_cache",
        ".svn",
        ".tox",
        ".venv",
        "__pypackages__",
        "_build",
        "buck-out",
        "build",
        "dist",
        "node_modules",
        "venv",
        "*vendored*",
        "*_vendor*",
]

target-version = ["py38"]
fix = true
